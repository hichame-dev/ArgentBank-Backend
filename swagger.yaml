
swagger: '2.0'
info:
  title: Argent Bank API documentation
  description: API pour gérer les utilisateurs et les transactions bancaires
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'

host: localhost:3001
basePath: /api/v1
schemes:
  - http

paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/accounts:
    get:
      summary: Récupère la liste des comptes de l'utilisateur
      description: Retourne tous les comptes associés à l'utilisateur authentifié
      tags:
        - Transactions
      security:
        - Bearer: []
      responses:
        '200':
          description: Liste des comptes
          schema:
            type: array
            items:
              $ref: '#/definitions/Account'
        '401':
          description: Non autorisé

  /user/accounts/{accountId}/transactions:
    get:
      summary: Récupère les transactions d'un compte pour le mois courant
      tags:
        - Transactions
      security:
        - Bearer: []
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
          description: ID du compte
      responses:
        '200':
          description: Liste des transactions
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '401':
          description: Non autorisé
        '404':
          description: Compte non trouvé

  /user/transactions/{transactionId}:
    get:
      summary: Récupère le détail d'une transaction spécifique
      tags:
        - Transactions
      security:
        - Bearer: []
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: ID de la transaction
      responses:
        '200':
          description: Détail de la transaction
          schema:
            $ref: '#/definitions/Transaction'
        '401':
          description: Non autorisé
        '404':
          description: Transaction non trouvée

    patch:
      summary: Met à jour une transaction (note, catégorie)
      tags:
        - Transactions
      security:
        - Bearer: []
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: ID de la transaction à modifier
        - in: body
          name: transactionUpdate
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      responses:
        '200':
          description: Transaction mise à jour
        '400':
          description: Requête invalide
        '401':
          description: Non autorisé
        '404':
          description: Transaction non trouvée

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name

  UserProfile:
    type: object
    properties:
      userName:
        type: string

  Account:
    type: object
    properties:
      accountId:
        type: string
        example: acc-123456
      type:
        type: string
        example: Checking
      balance:
        type: number
        example: 2500.75
      currency:
        type: string
        example: USD

  Transaction:
    type: object
    properties:
      date:
        type: string
        example: "27/02/20"
      description:
        type: string
        example: "Golden Sun Bakery"
      amount:
        type: string
        example: "$8.00"
      balance:
        type: string
        example: "$298.00"
      type:
        type: string
        example: "Electronic"
      category:
        type: string
        example: "Food"
      note:
        type: string
        example: "lorem ipsum"

  TransactionUpdate:
    type: object
    properties:
      category:
        type: string
        example: "Food"
      note:
        type: string
        example: "lorem ipsum"
    required:
      - category
      - note
